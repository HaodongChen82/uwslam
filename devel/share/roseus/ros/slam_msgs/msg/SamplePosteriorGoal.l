;; Auto-generated. Do not edit!


(when (boundp 'slam_msgs::SamplePosteriorGoal)
  (if (not (find-package "SLAM_MSGS"))
    (make-package "SLAM_MSGS"))
  (shadow 'SamplePosteriorGoal (find-package "SLAM_MSGS")))
(unless (find-package "SLAM_MSGS::SAMPLEPOSTERIORGOAL")
  (make-package "SLAM_MSGS::SAMPLEPOSTERIORGOAL"))

(in-package "ROS")
;;//! \htmlinclude SamplePosteriorGoal.msg.html


(defclass slam_msgs::SamplePosteriorGoal
  :super ros::object
  :slots (_n _xmin _xmax _ymin _ymax _subdivs ))

(defmethod slam_msgs::SamplePosteriorGoal
  (:init
   (&key
    ((:n __n) 0)
    ((:xmin __xmin) 0.0)
    ((:xmax __xmax) 0.0)
    ((:ymin __ymin) 0.0)
    ((:ymax __ymax) 0.0)
    ((:subdivs __subdivs) 0)
    )
   (send-super :init)
   (setq _n (round __n))
   (setq _xmin (float __xmin))
   (setq _xmax (float __xmax))
   (setq _ymin (float __ymin))
   (setq _ymax (float __ymax))
   (setq _subdivs (round __subdivs))
   self)
  (:n
   (&optional __n)
   (if __n (setq _n __n)) _n)
  (:xmin
   (&optional __xmin)
   (if __xmin (setq _xmin __xmin)) _xmin)
  (:xmax
   (&optional __xmax)
   (if __xmax (setq _xmax __xmax)) _xmax)
  (:ymin
   (&optional __ymin)
   (if __ymin (setq _ymin __ymin)) _ymin)
  (:ymax
   (&optional __ymax)
   (if __ymax (setq _ymax __ymax)) _ymax)
  (:subdivs
   (&optional __subdivs)
   (if __subdivs (setq _subdivs __subdivs)) _subdivs)
  (:serialization-length
   ()
   (+
    ;; int32 _n
    4
    ;; float64 _xmin
    8
    ;; float64 _xmax
    8
    ;; float64 _ymin
    8
    ;; float64 _ymax
    8
    ;; int32 _subdivs
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _n
       (write-long _n s)
     ;; float64 _xmin
       (sys::poke _xmin (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _xmax
       (sys::poke _xmax (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _ymin
       (sys::poke _ymin (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _ymax
       (sys::poke _ymax (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; int32 _subdivs
       (write-long _subdivs s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _n
     (setq _n (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; float64 _xmin
     (setq _xmin (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _xmax
     (setq _xmax (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _ymin
     (setq _ymin (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _ymax
     (setq _ymax (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; int32 _subdivs
     (setq _subdivs (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get slam_msgs::SamplePosteriorGoal :md5sum-) "f901b2c1454b044728cdcd5b0d0944c8")
(setf (get slam_msgs::SamplePosteriorGoal :datatype-) "slam_msgs/SamplePosteriorGoal")
(setf (get slam_msgs::SamplePosteriorGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#goal definition
int32 n
float64  xmin
float64  xmax
float64  ymin
float64  ymax
int32 subdivs

")



(provide :slam_msgs/SamplePosteriorGoal "f901b2c1454b044728cdcd5b0d0944c8")


